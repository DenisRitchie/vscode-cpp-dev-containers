// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: UserService.proto

#include "UserService.pb.h"
#include "UserService.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/sync_stream.h>
#include <gmock/gmock.h>
namespace dev_container {
namespace cpp {

class MockUserServiceStub : public UserService::StubInterface {
 public:
  MOCK_METHOD3(ListUsers, ::grpc::Status(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::dev_container::cpp::UserResponse* response));
  MOCK_METHOD3(AsyncListUsersRaw, ::grpc::ClientAsyncResponseReaderInterface< ::dev_container::cpp::UserResponse>*(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncListUsersRaw, ::grpc::ClientAsyncResponseReaderInterface< ::dev_container::cpp::UserResponse>*(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(CreateUser, ::grpc::Status(::grpc::ClientContext* context, const ::dev_container::cpp::UserRequest& request, ::dev_container::cpp::User* response));
  MOCK_METHOD3(AsyncCreateUserRaw, ::grpc::ClientAsyncResponseReaderInterface< ::dev_container::cpp::User>*(::grpc::ClientContext* context, const ::dev_container::cpp::UserRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncCreateUserRaw, ::grpc::ClientAsyncResponseReaderInterface< ::dev_container::cpp::User>*(::grpc::ClientContext* context, const ::dev_container::cpp::UserRequest& request, ::grpc::CompletionQueue* cq));
};

} // namespace dev_container
} // namespace cpp

